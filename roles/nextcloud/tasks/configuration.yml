---

 - name: fake register
   become: true
   become_user: '{{ httpd_user }}'
   command: id
   register: fake_register

 - name: generate data directory
   file:
     path: '{{ nextcloud_install_dir }}/nextcloud/data'
     setype: httpd_sys_rw_content_t
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
     state: directory

 - name: selinux contexts for nextcloud
   file: 
     path: '{{ nextcloud_install_dir }}/{{ item }}' 
     setype: httpd_sys_rw_content_t
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
   with_list: '{{ nextcloud_selinux_paths }}'
   ignore_errors: yes

 - name: apache site configuraiton for nextcloud
   template:
     src: nextcloud.conf.j2
     setype: httpd_sys_rw_content_t
     dest: '{{ httpd_site_conf_path }}/nextcloud.conf'
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
   notify: reload_httpd

 - name: make occ executable
   file:
     path: '{{ nextcloud_install_dir }}/nextcloud/occ'
     mode: 0755
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
     setype: httpd_sys_rw_content_t

 - name: check for existing nextcloud config
   become: true
   become_user: '{{ httpd_user }}'
   stat:
     path: '{{ nextcloud_install_dir }}/nextcloud/config/config.php'
   register: nextcloud_config_file

 - name: provision nextcloud database
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ maintenance:install --database=mysql --database-name={{ nextcloud_db_name }} --database-host={{ nextcloud_db_host }} --database-pass={{ nextcloud_db_password }} --database-user={{ nextcloud_db_user }} --admin-user=admin --admin-pass={{ nextcloud_db_password }}"
   when: nextcloud_config_file.stat.exists == false

 - name: waiting for the nextcloud installation to finish
   pause:
     seconds: 10

 - name: enable maintenance mode
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ maintenance:mode --on"

 - name: configure data directory
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:system:set datadirectory --value={{ nextcloud_data_directory }}"
   when: nextcloud_data_directory is defined

 - name: move data directory to correct location
   command: mv "{{ nextcloud_install_dir }}/nextcloud/data" "{{ nextcloud_data_directory }}"
   when: nextcloud_data_directory is defined
 
 - name: creating data directory
   file:
     path: '{{ nextcloud_data_directory }}'
     setype: httpd_sys_rw_content_t
     state: directory
     mode: 0770
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
   when: nextcloud_data_directory is defined

 - name: creating skeleton directory
   file:
     path: '{{ nextcloud_data_directory }}/skeleton'
     setype: httpd_sys_rw_content_t
     state: directory
     mode: 0770
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
   when: nextcloud_data_directory is defined

 - name: set skeletondirectory
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:system:set skeletondirectory --value={{ nextcloud_data_directory }}/skeleton"

 - name: waiting for the nextcloud installation to finish
   pause:
     seconds: 10
   when: nextcloud_data_directory is defined

 - name: set trusted nextcloud domains
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:system:set trusted_domains 0 --value={{ nextcloud_site_fqdn }}"

 - name: configure default language
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:system:set default_language --value={{ nextcloud_default_language }}"

 - name: install richdocuments (collabora online integration)
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ app:install richdocuments"
   ignore_errors: yes

 - name: enable richdocuments
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ app:enable richdocuments"

 - name: install SSO & SAML authentication
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ app:install user_saml"
   ignore_errors: yes

 - name: enable SSO & SAML authenthication
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ app:enable user_saml"

 - name: apply config setting for SSO & SAML configuration
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php {{ nextcloud_install_dir }}/nextcloud/occ config:app:set user_saml {{ item.key }} --value=\"{{ item.value.entry }}\""
   with_dict: "{{ nextcloud_saml_config }}"

 - name: configure richdocuments
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:app:set richdocuments wopi_url --value={{ nextcloud_wopi_url }}"

 - name: allow access to ldap server selinux
   command: setsebool -P httpd_can_connect_ldap on

 - name: enable ldap backend
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ app:enable user_ldap"

 - name: disabling maintenance mode
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ maintenance:mode --off"

 - name: read ldap config
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ ldap:show-config"
   register: nextcloud_ldap_config_query
   failed_when: false
   changed_when: false
 
 - name: debug 
   debug:
     var: nextcloud_ldap_config
   
 - name: debug 
   debug:
     var: nextcloud_ldap_config_query

 - name: create ldap config s01
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ ldap:create-empty-config"
   # when: '"s01" not in nextcloud_ldap_config_query.stdout'
   # when: nextcloud_ldap_config_query.stdout_lines | join('') is search('s01')
   # those when's are not really working. always creating a empty LDAP cfg. not directly
   # a problem, but not nice.

 - name: apply config setting for ldap configuration
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php {{ nextcloud_install_dir }}/nextcloud/occ ldap:set-config s01 {{ item.key }} {{ item.value.entry }}"  
   with_dict: "{{ nextcloud_ldap_config }}"

 - name: deploying wormhole.html file
   copy:
     src: wormhole.html
     dest: "{{ nextcloud_install_dir }}/nextcloud/wormhole.html"
     owner: '{{ httpd_user }}'
     group: '{{ httpd_group }}'
     mode: 0644

# Theming
   # - name: copy custom logo into place
   #   copy:
   #     src: 'files/{{ nextcloud_logo }}'
   #     dest: '{{ nextcloud_install_dir }}/ somewhere /img/logo.svg'
   #     owner: '{{ httpd_user }}'
   #     group: '{{ httpd_group }}'

 - name: setting theme color
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:app:set theming color --value='{{ nextcloud_theming_color }}'"  
 
 - name: setting theme name
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:app:set theming name --value='{{ nextcloud_theming_name }}'"  
 
 - name: setting theme slogan
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:app:set theming slogan --value='{{ nextcloud_theming_slogan }}'"
 
 - name: setting theme url
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ config:app:set theming name --value='{{ nextcloud_theming_url }}'"

 - name: update cache for the logo change to work
   become: true
   become_user: '{{ httpd_user }}'
   command: "/opt/rh/rh-php70/root/bin/php '{{ nextcloud_install_dir }}'/nextcloud/occ maintenance:theme:update"

